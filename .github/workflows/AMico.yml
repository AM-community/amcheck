name: AMico - convert installation scripts
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: build
      if: always()
      run: |
        wget -q https://github.com/ivan-hc/AM/archive/refs/heads/dev.zip
        unzip -qq ./dev.zip
        cd AM-dev/programs/x86_64 || exit 1
        for f in *; do
        if grep -q "api.github.com" "$f" 2> /dev/null; then
        if grep -q "browser_download_url" "$f" 2> /dev/null; then
        if ! grep -q "appimagetool" "$f" 2> /dev/null; then
        if grep -q "mage" "$f" 2> /dev/null; then
        if grep -q "^APP=" "$f" 2> /dev/null; then
        APP=$(eval echo "$(grep -i '^APP=' "$f" | head -1 | sed 's/APP=//g')")
        fi	
        if grep -q "^REPO=" "$f" 2> /dev/null; then
        REPO=$(eval echo "$(grep -i '^REPO=' "$f" | head -1 | sed 's/REPO=//g')")
        fi	
        if grep -q "^SITE=" "$f" 2> /dev/null; then
        SITE=$(eval echo "$(grep -i '^SITE=' "$f" | head -1 | sed 's/SITE=//g')")
        fi	
        if grep -q "^d=" "$f" 2> /dev/null; then
        d=$(eval echo "$(grep -i '^d=' "$f" | head -1 | sed 's/d=//g')")
        fi	
        if grep -q "^dl=" "$f" 2> /dev/null; then
        dl=$(eval echo "$(grep -i '^dl=' "$f" | head -1 | sed 's/dl=//g')")
        fi	
        if grep -q "^rel=" "$f" 2> /dev/null; then
        rel=$(eval echo "$(grep -i '^rel=' "$f" | head -1 | sed 's/rel=//g')")
        fi	
        if grep -q "^tag=" "$f" 2> /dev/null; then
        tag=$(eval echo "$(grep -i '^tag=' "$f" | head -1 | sed 's/tag=//g')")
        fi	
        if grep -q "^v=" "$f" 2> /dev/null; then
        v=$(eval echo "$(grep -i '^v=' "$f" | head -1 | sed 's/v=//g')")
        fi	
        if grep -q "^ver=" "$f" 2> /dev/null; then
        ver=$(eval echo "$(grep -i '^ver=' "$f" | head -1 | sed 's/ver=//g')")
        fi	
        if grep -q "^version=" "$f" 2> /dev/null; then
        version=$(eval echo "$(grep -i '^version=' "$f" | head -1 | sed 's/version=//g')")
        fi
        if [ -z "$version" ]; then
        break
        else
        echo "APP=\"$APP\""
        version=$(eval echo "$(grep -i '^version=' "$f" | head -1 | sed 's/version=//g')")
        mkdir -p AMico
        wget -q https://raw.githubusercontent.com/ivan-hc/AM/main/templates/AM-SAMPLE-AppImage -O AMico/$APP
        sed -i "s/SAMPLE/$APP/g" AMico/$APP
        if [ -z "$REPO" ]; then
        RESPONSE="$SITE"
        else
        RESPONSE="$REPO"
        fi
        sed -i "s#REPLACETHIS#$RESPONSE#g" AMico/$APP
        q="'"
        FUNCTION='curl -Ls https://api.github.com/repos/'"$RESPONSE"'/releases | sed '"$q"'s/[()",{} ]/\\n/g'"$q"' | grep -oi "https.*mage$" | grep -vi "i386\|i686\|aarch64\|arm64\|armv7l" | head -1'
        sed -i "s#FUNCTION)#$FUNCTION)#g" AMico/$APP
        unset APP 2> /dev/null
        unset REPO 2> /dev/null
        unset SITE 2> /dev/null
        unset version 2> /dev/null
        echo '-----------------------------------------------------------------'
        fi
        fi
        fi
        fi
        fi
        done
        tar -cvf AMico-scripts-x86_64.tar.gz $(find ./ -type d -name "AMico")
        mkdir dist
        mv *tar.gz dist/

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: AMico-scripts-x86_64.tar.gz
        path: 'dist'
        
  release:
      needs: [build]
      permissions: write-all
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v1
          with:
            name: AMico-scripts-x86_64.tar.gz

        - name: release
          uses: marvinpinto/action-automatic-releases@latest
          with:
            title: Continuous build
            automatic_release_tag: continuous
            prerelease: false
            draft: false
            files: |
              AMico-scripts-x86_64.tar.gz
            repo_token: ${{ secrets.GITHUB_TOKEN }}

